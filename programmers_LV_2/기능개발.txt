import java.util.*;

class Solution {
    public int[] solution(int[] progresses, int[] speeds) {
       
        Queue<Integer> Q = new LinkedList<>();
        for(int i=0;i<speeds.length;i++){
            int tmp = (int)Math.ceil((double)(100 - progresses[i])/speeds[i]);
            Q.offer(tmp);
        }
        List<Integer> list = new ArrayList<>();
        while(!Q.isEmpty()){
            int tmp = Q.poll();
            int cnt = 1;
            while(!Q.isEmpty() && Q.peek()<=tmp ){
                cnt++;
                Q.poll();
            }
            list.add(cnt);
        }
         int[] answer = new int[list.size()];
        for(int i=0;i<answer.length;i++){
            answer[i]=list.get(i);
        }
        return answer;
    }
}