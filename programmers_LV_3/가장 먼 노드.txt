#include <string>
#include <vector>
#include<iostream>
#include<algorithm>
#include<queue>

using namespace std;
const int MAX = 200000;
int vis[MAX+4];
vector<int> ret[MAX+4];
void bfs(){
    queue<int> q;
    q.push(1);
    int cnt = 1;
    while(q.size()){
        int qSize = q.size();
        for(int i=0;i<qSize;i++){
            int temp = q.front();q.pop();
            for(int next : ret[temp]){
                if(!vis[next]){
                    vis[next]=cnt;
                    q.push(next);
                }
            }
        }
        cnt++;
    }
}
int solution(int n, vector<vector<int>> edge) {
    int answer = 0;
    for(vector<int> ed : edge){
        ret[ed[0]].push_back(ed[1]);
        ret[ed[1]].push_back(ed[0]);
    }
    vis[1]=1;
    bfs();
    int ans =0 ;
    for(int i=1;i<=n;i++){
        ans = max(ans, vis[i]);
    }
     for(int i=1;i<=n;i++){
        if(vis[i]==ans)answer++;
    }
    return answer;
}