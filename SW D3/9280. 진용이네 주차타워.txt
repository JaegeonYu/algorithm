import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Pro9280 {

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		int TC = Integer.parseInt(br.readLine());
		for(int T=1;T<=TC;T++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			int n = Integer.parseInt(st.nextToken());
			int m = Integer.parseInt(st.nextToken());
			int[] arr_n = new int[n];
			int[] check = new int[n];
			int[] arr_m = new int[m];
			for(int i=0;i<n;i++) {
				arr_n[i]=Integer.parseInt(br.readLine());
			}
			for(int i=0;i<m;i++) {
				arr_m[i]=Integer.parseInt(br.readLine());
			}
			Queue<Integer> readyQ = new LinkedList<>();
			int sum = 0;
			for(int i=0;i<2*m;i++) {
				int tmp = Integer.parseInt(br.readLine());
				if(tmp>0) {
					int count = 0;
					for(int j=0;j<n;j++) {
						if(check[j]==0) {
							check[j]=tmp;
							break;
						}else count++;
					}
					if(count==n)readyQ.offer(tmp);
				}else {
					for(int j=0;j<n;j++) {
						if(check[j]==-tmp) {
							check[j]=0;
							sum+=arr_n[j]*arr_m[-tmp-1];
							break;
						}
					}
					if(!readyQ.isEmpty()) {
						int readyCar = readyQ.poll();
						for(int j=0;j<n;j++) {
							if(check[j]==0) {
								check[j]=readyCar;
								break;
							}
						}
					}
				}
			}
			bw.write("#"+T+" "+sum+"\n");
		}
		bw.flush();
		bw.close();

	}

}